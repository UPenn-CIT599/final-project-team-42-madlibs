package madlibs;

import javax.swing.*;
import java.awt.*;
import java.awt.event.*;
import java.lang.reflect.Array;
import java.util.ArrayList;

/**
 * UserInterface1 class is a play area for testing implementation of GUI components using Swing library.
 * 
 * @author Team 42 - Ross Beck-MacNeil, Paul Lysander, and Brenda Moss  
 * 
 * Design Progress Notes:  This class is a test area for figuring out how to transition from console to GUI.  
 */
public class UserInterface1 extends JPanel implements ActionListener {

    private static final int STANDARD_WIDTH = 640;
    private JTextArea text; // a message will be posted to this text area
                            // each time an event is generated by some
                            // user action
    private CardLayout c1 = new CardLayout();
    private JPanel cards = new JPanel(c1);
    private JPanel firstCard = new JPanel();
    private JPanel secondCard = new JPanel();
    private JPanel thirdCard = new JPanel();
    private ArrayList<MenuEntry> childrensMenu;
    private ArrayList<MenuEntry> classicsMenu;
    private Boolean RadioButtonSelected = null;
    private String passage = null;
 
    
    /**
     * This constructor adds several GUI components to the panel and listens
     * for action events from some of them.
     */
    public UserInterface1(ArrayList<MenuEntry> childrensMenu, ArrayList<MenuEntry> classicsMenu) {
        this.childrensMenu = childrensMenu;
        this.classicsMenu = classicsMenu;
        
        setLayout(c1);
        add(cards, "MadLib");
        cards.add(firstCard, "Menu");
        cards.add(secondCard, "Replace Words");
        cards.add(thirdCard, "Result");
        c1.show(cards, "Menu");

        designFirstCard();
        designSecondCard();
        designThirdCard();

        

    }
    
    // end of constructor

    /**
     * designFirstCard method sets up the first window shown in the Literature Mad-Lib game using
     * a Swing BorderLayout.  The layout includes a dynamic menu of literature passage options based 
     * on the contents index.csv file (represented in the childrensMenu & classicsMenu array lists).
     * When each menu option is selected that passage is displayed in the text area to the right.  Once
     * the player decided on the passage they want to use to play Literature Mad-Libs, they will select
     * the button at the bottom of the window to continue playing the game.  
     */
    private void designFirstCard() {
        //Sets BorderLayout as layout for firstCard and inserts title in the top (NORTH) cell
        firstCard.setLayout(new BorderLayout());
        firstCard.setBackground(Color.WHITE);
        firstCard.setBorder(BorderFactory.createLineBorder(Color.GRAY, 3));
        JLabel title = new JLabel("Welcome to Literature Mad-Libs");
        title.setHorizontalAlignment(SwingConstants.CENTER);
        title.setPreferredSize(new Dimension(STANDARD_WIDTH, 50));
        firstCard.add(title, BorderLayout.NORTH);
        
        
        //Nests GridLayout into the left-middle (WEST) cell of the overall BorderLayout
        //This area will include radio buttons to select the literature menu
        JPanel litMenu = new JPanel(); 
        //Calculates numberMenuRows for GridLayout based on how many passage options are available 
        //plus three to compensate for the instructions and "Children's Literature" & "Classic Literature" labels
        int numMenuRows = (childrensMenu.size() + classicsMenu.size() + 3);        
        litMenu.setLayout(new GridLayout(numMenuRows, 1, 3, 10));
        litMenu.setBorder(BorderFactory.createEmptyBorder(8, 8, 8, 8));
        firstCard.add(litMenu, BorderLayout.WEST);
        
        //Populates the left-middle (WEST) cell with instructions and radio buttons for each menu option
        JLabel instructions = new JLabel("Please select a literature passage you would like to Mad-Lib: ");
        litMenu.add(instructions);
        JRadioButton[] radioButton = new JRadioButton[(childrensMenu.size() + classicsMenu.size() + 1)];
        ButtonGroup group = new ButtonGroup();
     
        
        //Displays the Children's Literature menu options
        JLabel childrenLabel = new JLabel("Children's Literature:");
        litMenu.add(childrenLabel);
        for (int i = 1; i <= childrensMenu.size(); i++){
            radioButton[i] = new JRadioButton(childrensMenu.get(i-1).getLitTitle() + " by" + childrensMenu.get(i-1).getLitAuthor());
            litMenu.add(radioButton[i]); 
            group.add(radioButton[i]);
            radioButton[i].setName(childrensMenu.get(i-1).getLitFileName());
        }
              
        //Displays the Classic Literature menu to console
        JLabel classicLabel = new JLabel("Classic Literature:");
        litMenu.add(classicLabel);
        for (int j = childrensMenu.size() + 1; j <= (childrensMenu.size() + classicsMenu.size()); j++) {
            radioButton[j] = new JRadioButton(classicsMenu.get(j - childrensMenu.size() - 1).getLitTitle() + " by" + classicsMenu.get(j - childrensMenu.size() - 1).getLitAuthor());
            litMenu.add(radioButton[j]);
            group.add(radioButton[j]);
            radioButton[j].setName(classicsMenu.get(j - childrensMenu.size() - 1).getLitFileName());
        }
        
        //Adds action Listener to radioButtons
        for (int k = 1; k <= (childrensMenu.size() + classicsMenu.size()); k++) {
            radioButton[k].addActionListener(this);
            
            
        }
        
        //Places scrolling text area into the right-middle (EAST) cell of the overall BorderLayout
        text = new JTextArea();
        text.setEditable(false);
        text.setMargin(new Insets(4, 4, 4, 4));
        firstCard.add(new JScrollPane(text), BorderLayout.CENTER);
        post("Eventually the original text of each passage will be displayed here when the player clicks on the menu selection.");
        
        //Places a "PLAY MAD-LIBS button into the bottom cell of the overall BorderLayout and
        //nests another BorderLayout within the button in order to display a 2-line button
        JButton playButton = new JButton();        
        playButton.setLayout(new BorderLayout());
        JLabel label1 = new JLabel("PLAY MAD-LIBS");
        JLabel label2 = new JLabel("with selected passage");
        label1.setHorizontalAlignment(SwingConstants.CENTER);
        label2.setHorizontalAlignment(SwingConstants.CENTER);
        playButton.add(BorderLayout.NORTH,label1);
        playButton.add(BorderLayout.SOUTH,label2);
        
        //Adds action listener to the playButton
        playButton.addActionListener(this);
        firstCard.add(playButton, BorderLayout.SOUTH);
        
    }
    
    /**
     * designSecondCard method sets up the second window shown in the Literature Mad-Lib game using
     * a Swing ......  
     */
    private void designSecondCard() {
        
    }
    
    /**
     * designSecondCard method sets up the second window shown in the Literature Mad-Lib game using
     * a Swing ......  
     */
    private void designThirdCard() {
        
    }
    
    private void post(String message) { // add a message and line feed to the text
        text.append(message + "\n\n");
    }

    /**
     * Respond to an ActionEvent from one of the GUI components in the panel.
     * In each case, a message about the event is posted to the text area.
     * This method is part of the ActionListener interface.
     * 
     * Design Progress Note:  This section needs to be expanded to display the text when each
     * radio button is pressed.
     */
    public void actionPerformed(ActionEvent evt) {
        
        try {
            JRadioButton passageSelected;
            Object target = evt.getSource(); // component that produced this event
            if (target instanceof JButton) {
                if (RadioButtonSelected == true) {
                    c1.show(cards, "Replace Words");
                    System.out.println(passage + "PLAY NOW");
                }
                else {
                    RadioButtonSelected = null;
                }
                
            }
            else if (target instanceof JRadioButton) {
                if (((JRadioButton) target).isSelected()) {
                    passageSelected = (JRadioButton) target;
                    MadLib m = new MadLib();
                    passage = m.litReader(passageSelected.getName());
                    text.setText(passage);
                    RadioButtonSelected = true;
                   
                  
                }
            }
        } catch (NullPointerException e) {
            // TODO Auto-generated catch block
            
        }
        
    }
    
   
}


